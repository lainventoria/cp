# Coding Style

* Usá dos (2) espacios en lugar de tabs

* Hacé comentarios explicativos

* Los comentarios van en el mismo nivel de tabulación que la línea que
  comentan

* Usá hashes estilo ruby 1.9:

        sarasa: true
  en vez de

        :sarasa => true
  siempre que se pueda

* No uses CSS ni javascript inline, siempre en los archivos de `app/assets/`
  correspondientes a la vista (y no en los `applicacion.{js,css}`)

* Las migraciones deben ser reversibles **siempre**

## Peer Review / Pull Request

* Usamos git-flow

* Implementá features en sus propias ramas

        git flow feature start <nombre descriptivo>

* Hacé los tests antes que las features ([TDD][]!)

* No mergees, hacé Pull Request y esperá la revisión

* Los PR se hacen a partir de develop!! En la rama `master` sólo debe haber
  código de producción, y exactamente lo que está en producción

* Antes de un PR, hace un rebase a partir de develop

        git checkout develop
        git pull origin develop
        git checkout feature/tu-rama
        git rebase develop

  Si ya habías pusheado `feature/tu-rama`, no hagas `git pull` de eso, porque
  crea un merge en `feature/tu-rama` duplicando los commits. En vez de eso
  reemplazá los commits en el repo remoto con `git push -f feature/tu-rama`

[TDD]: http://en.wikipedia.org/wiki/Test-driven_development
